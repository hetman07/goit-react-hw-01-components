{"version":3,"sources":["components/Profile/Profile.module.css","components/Statistics/Statistics.module.css","components/Friends/Friends.module.css","components/Transactions/Transactions.module.css","components/Profile/Profile.js","components/Profile/ListProfile.jsx","components/Statistics/Statistics.js","components/Statistics/ListStat.jsx","components/Friends/FriendList.jsx","components/Friends/FriendListItem.jsx","components/Transactions/TransactionHistory.jsx","App.js","index.js"],"names":["module","exports","Profile","name","tag","location","avatar","children","className","styles","profile","description","src","alt","ListProfile","stats","Object","entries","map","stat","idx","listStats","key","label","quantity","Statistics","title","statistics","defaultProps","get_rand_color","color","Math","floor","random","pow","toString","length","ListStat","statList","datastat","item","id","style","background","percentage","FriendList","friendList","FriendListItem","friends","friend","isOnline","statusOn","statusOff","width","TransactionHistory","items","transactionHistory","type","amount","currency","App","user","transactions","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.b1266bdc.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"flexCustom\":\"Profile_flexCustom__X9zSN\",\"margPadAuto\":\"Profile_margPadAuto__3LB_6\",\"profile\":\"Profile_profile__i1n2M Profile_flexCustom__X9zSN Profile_margPadAuto__3LB_6\",\"description\":\"Profile_description__34QpZ Profile_flexCustom__X9zSN Profile_margPadAuto__3LB_6\",\"avatar\":\"Profile_avatar__21atr\",\"name\":\"Profile_name__PDOIi Profile_margPadAuto__3LB_6\",\"tag\":\"Profile_tag__3LwLe Profile_margPadAuto__3LB_6\",\"location\":\"Profile_location__22jQO Profile_margPadAuto__3LB_6\",\"stats\":\"Profile_stats__vV5cj Profile_margPadAuto__3LB_6\",\"listStats\":\"Profile_listStats__LaKuS\",\"label\":\"Profile_label__30cvy\",\"quantity\":\"Profile_quantity__37EX-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"flexCustom\":\"Statistics_flexCustom__1U70M\",\"margPadAuto\":\"Statistics_margPadAuto__1sHXp\",\"statistics\":\"Statistics_statistics__3Axeb Statistics_margPadAuto__1sHXp Statistics_flexCustom__1U70M\",\"title\":\"Statistics_title__3ZDPo\",\"statList\":\"Statistics_statList__1ZFC-\",\"item\":\"Statistics_item__3hOS3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friendList\":\"Friends_friendList__3AAbw\",\"item\":\"Friends_item__bK2Zb\",\"status\":\"Friends_status__2blfd\",\"statusOn\":\"Friends_statusOn__1Suua Friends_status__2blfd\",\"statusOff\":\"Friends_statusOff__3gdWB Friends_status__2blfd\",\"avatar\":\"Friends_avatar__mbYK9\",\"name\":\"Friends_name__3hmvp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transactionHistory\":\"Transactions_transactionHistory__17jtM\"};","import React from \"react\";\r\nimport PropTypes from \"prop-types\"; //npm пакет для отлавливания ошибок\r\nimport styles from \"./Profile.module.css\"; //подключение стилей\r\n\r\nfunction Profile({ name, tag, location, avatar, children }) {\r\n  return (\r\n    <div className={styles.profile}>\r\n      <div className={styles.description}>\r\n        <img src={avatar} alt=\"user avatar\" className={styles.avatar} />\r\n        <p className={styles.name}> {name} </p>{\" \"}\r\n        <p className={styles.tag}> @{tag} </p>{\" \"}\r\n        <p className={styles.location}> {location} </p>{\" \"}\r\n      </div>{\" \"}\r\n      {children}{\" \"}\r\n    </div>\r\n  );\r\n}\r\n\r\nProfile.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  tag: PropTypes.string.isRequired,\r\n  location: PropTypes.string.isRequired,\r\n  avatar: PropTypes.string.isRequired,\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default Profile;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\"; //npm пакет для отлавливания ошибок\r\nimport styles from \"./Profile.module.css\"; //подключение стилей\r\n\r\nfunction ListProfile({ stats }) {\r\n  return (\r\n    <ul className={styles.stats}>\r\n      {Object.entries(stats).map((stat, idx) => (\r\n        <li className={styles.listStats} key={idx}>\r\n          <span className={styles.label}> {stat[0]} </span>\r\n          <span className={styles.quantity}> {stat[1]} </span>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nListProfile.propTypes = {\r\n  stats: PropTypes.shape({\r\n    followers: PropTypes.number.isRequired,\r\n    views: PropTypes.number.isRequired,\r\n    likes: PropTypes.number.isRequired,\r\n  }),\r\n};\r\n\r\nexport default ListProfile;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\"; //npm пакет для отлавливания ошибок\r\nimport styles from \"./Statistics.module.css\"; //подключение стилей\r\n\r\nfunction Statistics({ title, children }) {\r\n  return (\r\n    <section className={styles.statistics}>\r\n      {title && <h2 className={styles.title}> Upload stats </h2>}\r\n      {children}\r\n    </section>\r\n  );\r\n}\r\n\r\nStatistics.defaultProps = {\r\n  title: false,\r\n};\r\n\r\nStatistics.propTypes = {\r\n  title: PropTypes.bool,\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default Statistics;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\"; //npm пакет для отлавливания ошибок\r\nimport styles from \"./Statistics.module.css\"; //подключение стилей\r\n\r\n//функция случайных цветов\r\nfunction get_rand_color() {\r\n  let color = Math.floor(Math.random() * Math.pow(256, 3)).toString(16);\r\n  while (color.length < 6) {\r\n    color = \"0\" + color;\r\n  }\r\n  return \"#\" + color;\r\n}\r\n\r\nfunction ListStat({ statistics }) {\r\n  return (\r\n    <ul className={styles.statList}>\r\n      {statistics.map((datastat) => (\r\n        <li\r\n          className={styles.item}\r\n          key={datastat.id}\r\n          style={{ background: get_rand_color() }}\r\n        >\r\n          <span className={styles.label}> {datastat.label} </span>\r\n          <span className={styles.percentage}> {datastat.percentage}% </span>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nListStat.propTypes = {\r\n  statistics: PropTypes.arrayOf(\r\n    PropTypes.exact({\r\n      id: PropTypes.string.isRequired,\r\n      label: PropTypes.string.isRequired,\r\n      percentage: PropTypes.number.isRequired,\r\n    })\r\n  ).isRequired,\r\n};\r\n\r\nexport default ListStat;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\"; //npm пакет для отлавливания ошибок\r\nimport styles from \"./Friends.module.css\"; //подключение стилей\r\n\r\nfunction FriendList({ children }) {\r\n  return <ul className={styles.friendList}>{children}</ul>;\r\n}\r\n\r\nFriendList.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n};\r\nexport default FriendList;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\"; //npm пакет для отлавливания ошибок\r\nimport styles from \"./Friends.module.css\"; //подключение стилей\r\n\r\nfunction FriendListItem({ friends }) {\r\n  return friends.map((friend) => (\r\n    <li className={styles.item} key={friend.id}>\r\n      <span\r\n        className={friend.isOnline ? styles.statusOn : styles.statusOff}\r\n      ></span>\r\n      <img className={styles.avatar} src={friend.avatar} alt=\"\" width=\"48\" />\r\n      <p className={styles.name}>{friend.name}</p>\r\n    </li>\r\n  ));\r\n}\r\n\r\nFriendListItem.propTypes = {\r\n  friends: PropTypes.arrayOf(\r\n    PropTypes.exact({\r\n      id: PropTypes.number.isRequired,\r\n      isOnline: PropTypes.bool.isRequired,\r\n      avatar: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n    })\r\n  ),\r\n};\r\n\r\nFriendListItem.defaultProps = {\r\n  isOnline: false,\r\n};\r\n\r\nexport default FriendListItem;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\"; //npm пакет для отлавливания ошибок\r\nimport styles from \"./Transactions.module.css\"; //подключение стилей\r\n\r\nfunction TransactionHistory({ items }) {\r\n  return (\r\n    <table className={styles.transactionHistory}>\r\n      <thead>\r\n        <tr>\r\n          <th>Type</th>\r\n          <th>Amount</th>\r\n          <th>Currency</th>\r\n        </tr>\r\n      </thead>\r\n\r\n      <tbody>\r\n        {items.map((item) => (\r\n          <tr key={item.id}>\r\n            <td>{item.type}</td>\r\n            <td>{item.amount}</td>\r\n            <td>{item.currency}</td>\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n    </table>\r\n  );\r\n}\r\n\r\nTransactionHistory.propTypes = {\r\n  items: PropTypes.arrayOf(\r\n    PropTypes.exact({\r\n      id: PropTypes.string.isRequired,\r\n      type: PropTypes.string.isRequired,\r\n      amount: PropTypes.string.isRequired,\r\n      currency: PropTypes.string.isRequired,\r\n    })\r\n  ),\r\n};\r\n\r\nexport default TransactionHistory;\r\n","import React from \"react\";\nimport Profile from \"./components/Profile/Profile\";\nimport ListProfile from \"./components/Profile/ListProfile\";\nimport user from \"./user.json\";\nimport statistics from \"./statistical-data.json\";\nimport friends from \"./friends.json\";\nimport transactions from \"./transactions.json\";\n\nimport Statistics from \"./components/Statistics/Statistics\";\nimport ListStat from \"./components/Statistics/ListStat\";\nimport FriendList from \"./components/Friends/FriendList\";\nimport FriendListItem from \"./components/Friends/FriendListItem\";\nimport TransactionHistory from \"./components/Transactions/TransactionHistory\";\n\nfunction App() {\n  return (\n    <>\n      <Profile\n        name={user.name}\n        tag={user.tag}\n        location={user.location}\n        avatar={user.avatar}\n      >\n        <ListProfile stats={user.stats} />{\" \"}\n      </Profile>{\" \"}\n      <Statistics title>\n        <ListStat statistics={statistics} />{\" \"}\n      </Statistics>{\" \"}\n      <FriendList>\n        <FriendListItem friends={friends} />{\" \"}\n      </FriendList>{\" \"}\n      <TransactionHistory items={transactions} />{\" \"}\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render( < App / > , document.querySelector(\"#root\"));"],"sourceRoot":""}